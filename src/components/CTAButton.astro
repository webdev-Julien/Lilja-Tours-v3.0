---
export interface Props {
  text?: string;
  variant?: 'default' | 'mobile';
  href?: string;
  onClick?: string;
  class?: string;
}

const { 
  text = 'SEND QUOTE REQUEST', 
  variant = 'default', 
  href,
  onClick,
  class: customClass = ''
} = Astro.props;

const Element = href ? 'a' : 'button';
const baseClass = variant === 'mobile' ?
  'group bg-transparent text-white border border-white/50 px-8 py-4 font-light text-base md:text-lg lg:text-xl tracking-wide cursor-pointer transition-all duration-300 rounded-sm w-auto max-w-[250px] sm:max-w-[200px] no-underline inline-block text-center relative overflow-hidden hover:border-white cta-mobile' :
  'group bg-transparent text-white border border-white/50 px-6 py-2 font-light text-sm md:text-base lg:text-lg tracking-wide cursor-pointer transition-all duration-300 rounded-sm no-underline inline-flex items-center justify-center box-border h-11 relative overflow-hidden hover:border-white cta-default';
const className = `${baseClass} ${customClass}`.trim();
---

<Element
  class={className}
  href={href}
  onclick={onClick}
>
  <span class="relative z-10">{text}</span>
</Element>

<style>
  /* Custom hover effects using CSS variables */
  .cta-default::before,
  .cta-mobile::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--secondary);
    transform: translateY(-100%);
    transition: transform 0.8s ease;
    z-index: 1;
  }

  .cta-default:hover::before {
    transform: translateY(0);
  }

  .cta-mobile::before {
    transition: transform 0.3s ease;
  }

  .cta-mobile:hover::before {
    transform: translateY(0);
  }

  /* Mobile responsive adjustments */
  @media (max-width: 480px) {
    .cta-mobile {
      max-width: 200px !important;
      padding: 0.75rem 1.5rem !important;
      font-size: clamp(0.85rem, 2.2vw, 1rem) !important;
    }
  }
</style>